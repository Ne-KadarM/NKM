from django.db import models

class table2005(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()    
    
    def __str__(self):
        return f'{self.iso_alpha}{self.country_name}'
    
class table2006(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2007(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2008(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2009(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2010(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2011(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2012(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2013(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2014(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2015(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2016(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2017(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2018(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2019(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2020(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2021(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
class table2022(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()
    
class tableall_year(models.Model):
    id = models.AutoField(primary_key=True)
    country_name = models.CharField(max_length=100)
    iso_alpha = models.CharField(max_length=3)
    year = models.IntegerField()
    happiness_score = models.FloatField()
    log_gdp_per_capita = models.FloatField()
    social_support = models.FloatField()
    healthy_life_expectancy_at_birth = models.FloatField()
    freedom_to_make_life_choices = models.FloatField()
    generosity = models.FloatField()
    perceptions_of_corruption = models.FloatField()
    positive_affect = models.FloatField()
    negative_affect = models.FloatField()    
   
    

# Create your models here.
